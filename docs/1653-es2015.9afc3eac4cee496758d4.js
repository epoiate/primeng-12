(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[1653],{11653:function(e,n,t){"use strict";t.r(n),t.d(n,{GMapDemoModule:function(){return D}});var o=t(61116),a=t(11462),i=t(42066),l=t(78230),s=t(87368),r=t(12774),g=t(22320);let p=(()=>{class e{constructor(e,n,t,o){this.el=e,this.cd=t,this.zone=o,this.onMapClick=new s.vpe,this.onOverlayClick=new s.vpe,this.onOverlayDblClick=new s.vpe,this.onOverlayDragStart=new s.vpe,this.onOverlayDrag=new s.vpe,this.onOverlayDragEnd=new s.vpe,this.onMapReady=new s.vpe,this.onMapDragEnd=new s.vpe,this.onZoomChanged=new s.vpe,this.differ=n.find([]).create(null)}ngAfterViewChecked(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}initialize(){if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays)for(let e of this.overlays)e.setMap(this.map),this.bindOverlayEvents(e);this.map.addListener("click",e=>{this.zone.run(()=>{this.onMapClick.emit(e)})}),this.map.addListener("dragend",e=>{this.zone.run(()=>{this.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",e=>{this.zone.run(()=>{this.onZoomChanged.emit(e)})})}bindOverlayEvents(e){e.addListener("click",n=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("dblclick",n=>{this.zone.run(()=>{this.onOverlayDblClick.emit({originalEvent:n,overlay:e,map:this.map})})}),e.getDraggable()&&this.bindDragEvents(e)}ngDoCheck(){let e=this.differ.diff(this.overlays);e&&this.map&&(e.forEachRemovedItem(e=>{google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),e.forEachAddedItem(e=>{e.item.setMap(this.map),e.item.addListener("click",n=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:n,overlay:e.item,map:this.map})})}),e.item.getDraggable()&&this.bindDragEvents(e.item)}))}bindDragEvents(e){e.addListener("dragstart",n=>{this.zone.run(()=>{this.onOverlayDragStart.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("drag",n=>{this.zone.run(()=>{this.onOverlayDrag.emit({originalEvent:n,overlay:e,map:this.map})})}),e.addListener("dragend",n=>{this.zone.run(()=>{this.onOverlayDragEnd.emit({originalEvent:n,overlay:e,map:this.map})})})}getMap(){return this.map}}return e.\u0275fac=function(n){return new(n||e)(s.Y36(s.SBq),s.Y36(s.ZZ4),s.Y36(s.sBO),s.Y36(s.R0b))},e.\u0275cmp=s.Xpm({type:e,selectors:[["p-gmap"]],hostAttrs:[1,"p-element"],inputs:{style:"style",styleClass:"styleClass",options:"options",overlays:"overlays"},outputs:{onMapClick:"onMapClick",onOverlayClick:"onOverlayClick",onOverlayDblClick:"onOverlayDblClick",onOverlayDragStart:"onOverlayDragStart",onOverlayDrag:"onOverlayDrag",onOverlayDragEnd:"onOverlayDragEnd",onMapReady:"onMapReady",onMapDragEnd:"onMapDragEnd",onZoomChanged:"onZoomChanged"},decls:1,vars:3,consts:[[3,"ngStyle"]],template:function(e,n){1&e&&s._UZ(0,"div",0),2&e&&(s.Tol(n.styleClass),s.Q6J("ngStyle",n.style))},directives:[o.PC],encapsulation:2,changeDetection:0}),e})(),d=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({imports:[[o.ez]]}),e})();var c=t(59766),Z=t(11360),u=t(74136),m=t(47299),v=t(90628),h=t(52654),y=t(93876);const k=function(){return{"margin-top":".25em"}};function A(e,n){if(1&e){const e=s.EpF();s.TgZ(0,"div",21),s.TgZ(1,"div",22),s.TgZ(2,"label",23),s._uU(3,"Label"),s.qZA(),s.qZA(),s.TgZ(4,"div",24),s.TgZ(5,"input",25),s.NdJ("ngModelChange",function(n){return s.CHM(e),s.oxw().markerTitle=n}),s.qZA(),s.qZA(),s.TgZ(6,"div",22),s.TgZ(7,"label",26),s._uU(8,"Lat"),s.qZA(),s.qZA(),s.TgZ(9,"div",24),s._UZ(10,"input",27),s.qZA(),s.TgZ(11,"div",22),s.TgZ(12,"label",28),s._uU(13,"Lng"),s.qZA(),s.qZA(),s.TgZ(14,"div",24),s._UZ(15,"input",29),s.qZA(),s.TgZ(16,"div",22),s.TgZ(17,"label",30),s._uU(18,"Drag"),s.qZA(),s.qZA(),s.TgZ(19,"div",24),s.TgZ(20,"p-checkbox",31),s.NdJ("ngModelChange",function(n){return s.CHM(e),s.oxw().draggable=n}),s.qZA(),s.qZA(),s.qZA()}if(2&e){const e=s.oxw();s.xp6(5),s.Q6J("ngModel",e.markerTitle),s.xp6(5),s.Q6J("ngModel",e.selectedPosition.lat()),s.xp6(5),s.Q6J("ngModel",e.selectedPosition.lng()),s.xp6(5),s.Akn(s.DdM(6,k)),s.Q6J("ngModel",e.draggable)}}function T(e,n){if(1&e){const e=s.EpF();s.TgZ(0,"div"),s.TgZ(1,"button",32),s.NdJ("click",function(){return s.CHM(e),s.oxw().addMarker()}),s.qZA(),s.qZA()}}const b=function(){return{width:"100%",height:"320px","margin-bottom":"1em"}},f=function(){return{width:"300px"}};let M=(()=>{class e{constructor(e){this.messageService=e}ngOnInit(){this.options={center:{lat:36.890257,lng:30.707417},zoom:12},this.initOverlays(),this.infoWindow=new google.maps.InfoWindow}handleMapClick(e){this.dialogVisible=!0,this.selectedPosition=e.latLng}handleOverlayClick(e){if(null!=e.overlay.getTitle){let n=e.overlay.getTitle();this.infoWindow.setContent("<div>"+n+"</div>"),this.infoWindow.open(e.map,e.overlay),e.map.setCenter(e.overlay.getPosition()),this.messageService.add({severity:"info",summary:"Marker Selected",detail:n})}else this.messageService.add({severity:"info",summary:"Shape Selected",detail:""})}addMarker(){this.overlays.push(new google.maps.Marker({position:{lat:this.selectedPosition.lat(),lng:this.selectedPosition.lng()},title:this.markerTitle,draggable:this.draggable})),this.markerTitle=null,this.dialogVisible=!1}handleDragEnd(e){this.messageService.add({severity:"info",summary:"Marker Dragged",detail:e.overlay.getTitle()})}initOverlays(){this.overlays&&this.overlays.length||(this.overlays=[new google.maps.Marker({position:{lat:36.879466,lng:30.667648},title:"Konyaalti"}),new google.maps.Marker({position:{lat:36.883707,lng:30.689216},title:"Ataturk Park"}),new google.maps.Marker({position:{lat:36.885233,lng:30.702323},title:"Oldtown"}),new google.maps.Polygon({paths:[{lat:36.9177,lng:30.7854},{lat:36.8851,lng:30.7802},{lat:36.8829,lng:30.8111},{lat:36.9177,lng:30.8159}],strokeOpacity:.5,strokeWeight:1,fillColor:"#1976D2",fillOpacity:.35}),new google.maps.Circle({center:{lat:36.90707,lng:30.56533},fillColor:"#1976D2",fillOpacity:.35,strokeWeight:1,radius:1500}),new google.maps.Polyline({path:[{lat:36.86149,lng:30.63743},{lat:36.86341,lng:30.72463}],geodesic:!0,strokeColor:"#FF0000",strokeOpacity:.5,strokeWeight:2})])}zoomIn(e){e.setZoom(e.getZoom()+1)}zoomOut(e){e.setZoom(e.getZoom()-1)}clear(){this.overlays=[]}}return e.\u0275fac=function(n){return new(n||e)(s.Y36(l.ez))},e.\u0275cmp=s.Xpm({type:e,selectors:[["ng-component"]],features:[s._Bn([l.ez])],decls:233,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","gmap"],[1,"content-section","implementation"],[1,"card"],[3,"options","overlays","onMapClick","onOverlayClick","onOverlayDragEnd"],["gmap",""],["type","button","pButton","","label","Clear","icon","pi pi-times",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom In","icon","pi pi-plus",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom Out","icon","pi pi-minus",3,"click"],["showEffect","fade","header","New Location",3,"visible","visibleChange"],["class","p-grid p-fluid",4,"ngIf"],["pTemplate","footer"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap","target","_blank",1,"btn-viewsource"],[1,"p-grid","p-fluid"],[1,"p-col-2"],["for","title"],[1,"p-col-10"],["type","text","pInputText","","id","title",3,"ngModel","ngModelChange"],["for","lat"],["id","lat","type","text","readonly","","pInputText","",3,"ngModel"],["for","lng"],["id","lng","type","text","readonly","","pInputText","",3,"ngModel"],["for","drg"],["binary","true",3,"ngModel","ngModelChange"],["type","button","pButton","","label","Add Marker","icon","pi pi-plus",3,"click"]],template:function(e,n){if(1&e){const e=s.EpF();s.TgZ(0,"div",0),s.TgZ(1,"div",1),s.TgZ(2,"h1"),s._uU(3,"GMap"),s.qZA(),s.TgZ(4,"p"),s._uU(5,"GMap component provides integration with Google Maps API. This sample demontrates various uses cases like binding, overlays and events. Click the map to add a new item."),s.qZA(),s.qZA(),s._UZ(6,"app-demoActions",2),s.qZA(),s.TgZ(7,"div",3),s._UZ(8,"p-toast"),s.TgZ(9,"div",4),s.TgZ(10,"p-gmap",5,6),s.NdJ("onMapClick",function(e){return n.handleMapClick(e)})("onOverlayClick",function(e){return n.handleOverlayClick(e)})("onOverlayDragEnd",function(e){return n.handleDragEnd(e)}),s.qZA(),s.TgZ(12,"button",7),s.NdJ("click",function(){return n.clear()}),s.qZA(),s.TgZ(13,"button",8),s.NdJ("click",function(){s.CHM(e);const t=s.MAs(11);return n.zoomIn(t.getMap())}),s.qZA(),s.TgZ(14,"button",9),s.NdJ("click",function(){s.CHM(e);const t=s.MAs(11);return n.zoomOut(t.getMap())}),s.qZA(),s.TgZ(15,"p-dialog",10),s.NdJ("visibleChange",function(e){return n.dialogVisible=e}),s.YNc(16,A,21,7,"div",11),s.YNc(17,T,2,0,"ng-template",12),s.qZA(),s.qZA(),s.qZA(),s.TgZ(18,"div",13),s.TgZ(19,"p-tabView"),s.TgZ(20,"p-tabPanel",14),s.TgZ(21,"h5"),s._uU(22,"Import"),s.qZA(),s.TgZ(23,"app-code",15),s.IAx(),s._uU(24,"\nimport {GMapModule} from 'primeng/gmap';\n"),s.fQ9(),s.qZA(),s.TgZ(25,"h5"),s._uU(26,"Getting Started"),s.qZA(),s.TgZ(27,"p"),s._uU(28,"A map is initialized with options and dimensions. Refer to the google maps api for the list of available options."),s.qZA(),s.TgZ(29,"app-code",16),s.IAx(),s._uU(30,"\n<p-gmap [options]=\"options\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),s.fQ9(),s.qZA(),s.TgZ(31,"app-code",15),s.IAx(),s._uU(32,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n}\n"),s.fQ9(),s.qZA(),s.TgZ(33,"h5"),s._uU(34,"Overlays"),s.qZA(),s.TgZ(35,"p"),s._uU(36,"GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware of one-way binding so whenever the array changes, gmap updates itself."),s.qZA(),s.TgZ(37,"app-code",16),s.IAx(),s._uU(38,"\n<p-gmap [options]=\"options\" [overlays]=\"overlays\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),s.fQ9(),s.qZA(),s.TgZ(39,"app-code",15),s.IAx(),s._uU(40,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n}\n"),s.fQ9(),s.qZA(),s.TgZ(41,"h5"),s._uU(42,"Events"),s.qZA(),s.TgZ(43,"p"),s._uU(44,"GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging."),s.qZA(),s.TgZ(45,"app-code",16),s.IAx(),s._uU(46,'\n<p-gmap [options]="options" [overlays]="overlays" [style]="{\'width\':\'100%\',\'height\':\'320px\'}"\n            (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)"></p-gmap>\n'),s.fQ9(),s.qZA(),s.TgZ(47,"app-code",15),s.IAx(),s._uU(48,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n\n    handleMapClick(event) {\n        //event: MouseEvent of Google Maps api\n    }\n\n    handleOverlayClick(event) {\n        //event.originalEvent: MouseEvent of Google Maps api\n        //event.overlay: Clicked overlay\n        //event.map: Map instance\n    }\n}\n"),s.fQ9(),s.qZA(),s.TgZ(49,"h5"),s._uU(50,"Google Maps API"),s.qZA(),s.TgZ(51,"p"),s._uU(52,"In case you need to access the map instance directly, use the getMap() method."),s.qZA(),s.TgZ(53,"app-code",16),s.IAx(),s._uU(54,'\n<p-gmap #gmap [options]="options"></p-gmap>\n\n<button type="button" pButton label="Zoom In" icon="pi-search-plus" (click)="zoomIn(gmap.getMap())"></button>\n'),s.fQ9(),s.qZA(),s.TgZ(55,"app-code",15),s.IAx(),s._uU(56,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n}\n"),s.fQ9(),s.qZA(),s.TgZ(57,"p"),s._uU(58,"Another option is to to get the map object directly after init via (onMapReady) event. In the example below, google.maps.Map is used for adjusting map bounds to markers."),s.qZA(),s.TgZ(59,"app-code",16),s.IAx(),s._uU(60,'\n<p-gmap #gmap [options]="options" [overlays]="overlays" [style]="mapStyle"\n    (onMapReady)="setMap($event)"></p-gmap>\n'),s.fQ9(),s.qZA(),s.TgZ(61,"p"),s._uU(62,"Then from your component you would write"),s.qZA(),s.TgZ(63,"app-code",15),s.IAx(),s._uU(64,'\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    map: google.maps.Map;\n\n    setMap(event) {\n        this.map = event.map;\n    }\n\n    ngOnInit() {\n        let bounds = new google.maps.LatLngBounds();\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:"Konyaalti"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:"Ataturk Park"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:"Oldtown"}),\n        ]\n        // ... extend bounds\n        this.overlays.forEach(marker => {\n            bounds.extend(marker.getPosition());\n        });\n\n        setTimeout(()=> { // map will need some time to load\n            this.map.fitBounds(bounds); // Map object used directly\n        }, 1000);\n    }\n}\n'),s.fQ9(),s.qZA(),s.TgZ(65,"h5"),s._uU(66,"Properties"),s.qZA(),s.TgZ(67,"div",17),s.TgZ(68,"table",18),s.TgZ(69,"thead"),s.TgZ(70,"tr"),s.TgZ(71,"th"),s._uU(72,"Name"),s.qZA(),s.TgZ(73,"th"),s._uU(74,"Type"),s.qZA(),s.TgZ(75,"th"),s._uU(76,"Default"),s.qZA(),s.TgZ(77,"th"),s._uU(78,"Description"),s.qZA(),s.qZA(),s.qZA(),s.TgZ(79,"tbody"),s.TgZ(80,"tr"),s.TgZ(81,"td"),s._uU(82,"options"),s.qZA(),s.TgZ(83,"td"),s._uU(84,"any"),s.qZA(),s.TgZ(85,"td"),s._uU(86,"null"),s.qZA(),s.TgZ(87,"td"),s._uU(88,"Google Maps API configuration object."),s.qZA(),s.qZA(),s.TgZ(89,"tr"),s.TgZ(90,"td"),s._uU(91,"overlays"),s.qZA(),s.TgZ(92,"td"),s._uU(93,"array"),s.qZA(),s.TgZ(94,"td"),s._uU(95,"null"),s.qZA(),s.TgZ(96,"td"),s._uU(97,"An array of overlays to display."),s.qZA(),s.qZA(),s.TgZ(98,"tr"),s.TgZ(99,"td"),s._uU(100,"style"),s.qZA(),s.TgZ(101,"td"),s._uU(102,"string"),s.qZA(),s.TgZ(103,"td"),s._uU(104,"null"),s.qZA(),s.TgZ(105,"td"),s._uU(106,"Inline style of the component."),s.qZA(),s.qZA(),s.TgZ(107,"tr"),s.TgZ(108,"td"),s._uU(109,"styleClass"),s.qZA(),s.TgZ(110,"td"),s._uU(111,"string"),s.qZA(),s.TgZ(112,"td"),s._uU(113,"null"),s.qZA(),s.TgZ(114,"td"),s._uU(115,"Style class of the component."),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(116,"h5"),s._uU(117,"Events"),s.qZA(),s.TgZ(118,"div",17),s.TgZ(119,"table",18),s.TgZ(120,"thead"),s.TgZ(121,"tr"),s.TgZ(122,"th"),s._uU(123,"Name"),s.qZA(),s.TgZ(124,"th"),s._uU(125,"Parameters"),s.qZA(),s.TgZ(126,"th"),s._uU(127,"Description"),s.qZA(),s.qZA(),s.qZA(),s.TgZ(128,"tbody"),s.TgZ(129,"tr"),s.TgZ(130,"td"),s._uU(131,"onMapClick"),s.qZA(),s.TgZ(132,"td"),s._uU(133,"event: Google Maps MouseEvent"),s.qZA(),s.TgZ(134,"td"),s._uU(135,"Callback to invoke when map is clicked except markers."),s.qZA(),s.qZA(),s.TgZ(136,"tr"),s.TgZ(137,"td"),s._uU(138,"onMapDragEnd"),s.qZA(),s.TgZ(139,"td"),s._uU(140,"originalEvent: Google Maps dragend"),s._UZ(141,"br"),s.qZA(),s.TgZ(142,"td"),s._uU(143,"Callback to invoke when map drag (i.e. pan) has ended."),s.qZA(),s.qZA(),s.TgZ(144,"tr"),s.TgZ(145,"td"),s._uU(146,"onMapReady"),s.qZA(),s.TgZ(147,"td"),s._uU(148,"event.map: Google Maps Instance"),s.qZA(),s.TgZ(149,"td"),s._uU(150,"Callback to invoke when the map is ready to be used."),s.qZA(),s.qZA(),s.TgZ(151,"tr"),s.TgZ(152,"td"),s._uU(153,"onOverlayClick"),s.qZA(),s.TgZ(154,"td"),s._uU(155,"originalEvent: Google Maps MouseEvent "),s._UZ(156,"br"),s._uU(157," overlay: Clicked overlay "),s._UZ(158,"br"),s._uU(159," map: Map instance "),s._UZ(160,"br"),s.qZA(),s.TgZ(161,"td"),s._uU(162,"Callback to invoke when an overlay is clicked."),s.qZA(),s.qZA(),s.TgZ(163,"tr"),s.TgZ(164,"td"),s._uU(165,"onOverlayDblClick"),s.qZA(),s.TgZ(166,"td"),s._uU(167,"originalEvent: Google Maps MouseEvent "),s._UZ(168,"br"),s._uU(169," overlay: Clicked overlay "),s._UZ(170,"br"),s._uU(171," map: Map instance "),s._UZ(172,"br"),s.qZA(),s.TgZ(173,"td"),s._uU(174,"Callback to invoke when an overlay is double clicked."),s.qZA(),s.qZA(),s.TgZ(175,"tr"),s.TgZ(176,"td"),s._uU(177,"onOverlayDrag"),s.qZA(),s.TgZ(178,"td"),s._uU(179,"originalEvent: Google Maps MouseEvent "),s._UZ(180,"br"),s._uU(181," overlay: Clicked overlay "),s._UZ(182,"br"),s._uU(183," map: Map instance "),s._UZ(184,"br"),s.qZA(),s.TgZ(185,"td"),s._uU(186,"Callback to invoke when an overlay is being dragged."),s.qZA(),s.qZA(),s.TgZ(187,"tr"),s.TgZ(188,"td"),s._uU(189,"onOverlayDragEnd"),s.qZA(),s.TgZ(190,"td"),s._uU(191,"originalEvent: Google Maps MouseEvent "),s._UZ(192,"br"),s._uU(193," overlay: Clicked overlay "),s._UZ(194,"br"),s._uU(195," map: Map instance "),s._UZ(196,"br"),s.qZA(),s.TgZ(197,"td"),s._uU(198,"Callback to invoke when an overlay drag ends."),s.qZA(),s.qZA(),s.TgZ(199,"tr"),s.TgZ(200,"td"),s._uU(201,"onOverlayDragStart"),s.qZA(),s.TgZ(202,"td"),s._uU(203,"originalEvent: Google Maps MouseEvent "),s._UZ(204,"br"),s._uU(205," overlay: Clicked overlay "),s._UZ(206,"br"),s._uU(207," map: Map instance "),s._UZ(208,"br"),s.qZA(),s.TgZ(209,"td"),s._uU(210,"Callback to invoke when an overlay drag starts."),s.qZA(),s.qZA(),s.TgZ(211,"tr"),s.TgZ(212,"td"),s._uU(213,"onZoomChanged"),s.qZA(),s.TgZ(214,"td"),s._uU(215,"originalEvent: Google Maps zoom_changed"),s.qZA(),s.TgZ(216,"td"),s._uU(217,"Callback to invoke when zoom level has changed."),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s.TgZ(218,"h5"),s._uU(219,"Dependencies"),s.qZA(),s.TgZ(220,"p"),s._uU(221,"Google Maps API."),s.qZA(),s.qZA(),s.TgZ(222,"p-tabPanel",19),s.TgZ(223,"a",20),s.TgZ(224,"span"),s._uU(225,"View on GitHub"),s.qZA(),s.qZA(),s.TgZ(226,"app-code",16),s.IAx(),s._uU(227,'\n<p-toast [style]="{marginTop: \'80px\'}"></p-toast>\n\n<p-gmap #gmap [style]="{\'width\':\'100%\',\'height\':\'320px\', \'margin-bottom\': \'1em\'}" [options]="options" [overlays]="overlays"\n       (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)" (onOverlayDragEnd)="handleDragEnd($event)"></p-gmap>\n\n<button type="button" pButton label="Clear" icon="pi pi-times" (click)="clear()" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom In" icon="pi pi-plus" (click)="zoomIn(gmap.getMap())" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom Out" icon="pi pi-minus" (click)="zoomOut(gmap.getMap())"></button>\n\n<p-dialog showEffect="fade" [(visible)]="dialogVisible" header="New Location" [style]="{width: \'300px\'}">>\n    <div class="p-grid p-fluid" *ngIf="selectedPosition">\n        <div class="p-col-2"><label for="title">Label</label></div>\n        <div class="p-col-10"><input type="text" pInputText id="title" [(ngModel)]="markerTitle"></div>\n\n        <div class="p-col-2"><label for="lat">Lat</label></div>\n        <div class="p-col-10"><input id="lat" type="text" readonly pInputText [ngModel]="selectedPosition.lat()"></div>\n\n        <div class="p-col-2"><label for="lng">Lng</label></div>\n        <div class="p-col-10"><input id="lng" type="text" readonly pInputText [ngModel]="selectedPosition.lng()"></div>\n\n        <div class="p-col-2"><label for="drg">Drag</label></div>\n        <div class="p-col-10"><p-checkbox [(ngModel)]="draggable" binary="true" [style]="{\'margin-top\':\'.25em\'}"></p-checkbox></div>\n    </div>\n    <ng-template pTemplate="footer">\n        <div>\n            <button type="button" pButton label="Add Marker" icon="pi-plus" (click)="addMarker()"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n'),s.fQ9(),s.qZA(),s.TgZ(228,"app-code",15),s.IAx(),s._uU(229,"\nexport class GMapDemo implements OnInit {\n\n    options: any;\n\n    overlays: any[];\n\n    dialogVisible: boolean;\n\n    markerTitle: string;\n\n    selectedPosition: any;\n\n    infoWindow: any;\n\n    draggable: boolean;\n\n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.initOverlays();\n\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n\n    handleOverlayClick(event) {\n        let isMarker = event.overlay.getTitle != undefined;\n\n        if (isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('"),s.TgZ(230,"div"),s._uU(231,"' + title + '"),s.qZA(),s._uU(232,"');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n\n            this.messageService.add({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.messageService.add({severity:'info', summary:'Shape Selected', detail: ''});\n        }\n    }\n\n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n\n    handleDragEnd(event) {\n        this.messageService.add({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n\n    initOverlays() {\n        if (!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n\n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n\n    clear() {\n        this.overlays = [];\n    }\n}\n"),s.fQ9(),s.qZA(),s.qZA(),s.qZA(),s.qZA()}2&e&&(s.xp6(10),s.Akn(s.DdM(8,b)),s.Q6J("options",n.options)("overlays",n.overlays),s.xp6(5),s.Akn(s.DdM(9,f)),s.Q6J("visible",n.dialogVisible),s.xp6(1),s.Q6J("ngIf",n.selectedPosition))},directives:[r.P,g.FN,p,c.Hq,Z.V,o.O5,u.jx,m.xf,m.x4,v.h,a.Fj,h.o,a.JJ,a.On,y.XZ],styles:[".p-col-2[_ngcontent-%COMP%]{display:flex;align-self:center}"]}),e})(),q=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({imports:[[i.Bz.forChild([{path:"",component:M}])],i.Bz]}),e})();var _=t(35167),U=t(18897),w=t(50514),C=t(56463),O=t(59202);let D=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=s.oAB({type:e}),e.\u0275inj=s.cJS({imports:[[o.ez,a.u5,q,d,_.EV,h.j,U.nD,w.S,C.hJ,O.LU,v.a,r.L]]}),e})()}}]);
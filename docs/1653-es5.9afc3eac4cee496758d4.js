!function(){function e(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=function(e,t){if(e){if("string"==typeof e)return n(e,t);var o={}.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var a=0,i=function(){};return{s:i,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,r=!0,s=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return r=e.done,e},e:function(e){s=!0,l=e},f:function(){try{r||null==o.return||o.return()}finally{if(s)throw l}}}}function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}function t(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,i(o.key),o)}}function a(e,n,t){return n&&o(e.prototype,n),t&&o(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function i(e){var n=function(e,n){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var o=t.call(e,n||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"==typeof n?n:n+""}(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[1653],{11653:function(n,o,i){"use strict";i.r(o),i.d(o,{GMapDemoModule:function(){return P}});var l=i(61116),r=i(11462),s=i(42066),g=i(78230),p=i(87368),d=i(12774),c=i(22320),u=function(){var n=function(){return a(function e(n,o,a,i){t(this,e),this.el=n,this.cd=a,this.zone=i,this.onMapClick=new p.vpe,this.onOverlayClick=new p.vpe,this.onOverlayDblClick=new p.vpe,this.onOverlayDragStart=new p.vpe,this.onOverlayDrag=new p.vpe,this.onOverlayDragEnd=new p.vpe,this.onMapReady=new p.vpe,this.onMapDragEnd=new p.vpe,this.onZoomChanged=new p.vpe,this.differ=o.find([]).create(null)},[{key:"ngAfterViewChecked",value:function(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}},{key:"initialize",value:function(){var n=this;if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays){var t,o=e(this.overlays);try{for(o.s();!(t=o.n()).done;){var a=t.value;a.setMap(this.map),this.bindOverlayEvents(a)}}catch(i){o.e(i)}finally{o.f()}}this.map.addListener("click",function(e){n.zone.run(function(){n.onMapClick.emit(e)})}),this.map.addListener("dragend",function(e){n.zone.run(function(){n.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",function(e){n.zone.run(function(){n.onZoomChanged.emit(e)})})}},{key:"bindOverlayEvents",value:function(e){var n=this;e.addListener("click",function(t){n.zone.run(function(){n.onOverlayClick.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("dblclick",function(t){n.zone.run(function(){n.onOverlayDblClick.emit({originalEvent:t,overlay:e,map:n.map})})}),e.getDraggable()&&this.bindDragEvents(e)}},{key:"ngDoCheck",value:function(){var e=this,n=this.differ.diff(this.overlays);n&&this.map&&(n.forEachRemovedItem(function(e){google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),n.forEachAddedItem(function(n){n.item.setMap(e.map),n.item.addListener("click",function(t){e.zone.run(function(){e.onOverlayClick.emit({originalEvent:t,overlay:n.item,map:e.map})})}),n.item.getDraggable()&&e.bindDragEvents(n.item)}))}},{key:"bindDragEvents",value:function(e){var n=this;e.addListener("dragstart",function(t){n.zone.run(function(){n.onOverlayDragStart.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("drag",function(t){n.zone.run(function(){n.onOverlayDrag.emit({originalEvent:t,overlay:e,map:n.map})})}),e.addListener("dragend",function(t){n.zone.run(function(){n.onOverlayDragEnd.emit({originalEvent:t,overlay:e,map:n.map})})})}},{key:"getMap",value:function(){return this.map}}])}();return n.\u0275fac=function(e){return new(e||n)(p.Y36(p.SBq),p.Y36(p.ZZ4),p.Y36(p.sBO),p.Y36(p.R0b))},n.\u0275cmp=p.Xpm({type:n,selectors:[["p-gmap"]],hostAttrs:[1,"p-element"],inputs:{style:"style",styleClass:"styleClass",options:"options",overlays:"overlays"},outputs:{onMapClick:"onMapClick",onOverlayClick:"onOverlayClick",onOverlayDblClick:"onOverlayDblClick",onOverlayDragStart:"onOverlayDragStart",onOverlayDrag:"onOverlayDrag",onOverlayDragEnd:"onOverlayDragEnd",onMapReady:"onMapReady",onMapDragEnd:"onMapDragEnd",onZoomChanged:"onZoomChanged"},decls:1,vars:3,consts:[[3,"ngStyle"]],template:function(e,n){1&e&&p._UZ(0,"div",0),2&e&&(p.Tol(n.styleClass),p.Q6J("ngStyle",n.style))},directives:[l.PC],encapsulation:2,changeDetection:0}),n}(),v=function(){var e=a(function e(){t(this,e)});return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=p.oAB({type:e}),e.\u0275inj=p.cJS({imports:[[l.ez]]}),e}(),m=i(59766),Z=i(11360),y=i(74136),h=i(47299),f=i(90628),k=i(52654),A=i(93876),b=function(){return{"margin-top":".25em"}};function T(e,n){if(1&e){var t=p.EpF();p.TgZ(0,"div",21),p.TgZ(1,"div",22),p.TgZ(2,"label",23),p._uU(3,"Label"),p.qZA(),p.qZA(),p.TgZ(4,"div",24),p.TgZ(5,"input",25),p.NdJ("ngModelChange",function(e){return p.CHM(t),p.oxw().markerTitle=e}),p.qZA(),p.qZA(),p.TgZ(6,"div",22),p.TgZ(7,"label",26),p._uU(8,"Lat"),p.qZA(),p.qZA(),p.TgZ(9,"div",24),p._UZ(10,"input",27),p.qZA(),p.TgZ(11,"div",22),p.TgZ(12,"label",28),p._uU(13,"Lng"),p.qZA(),p.qZA(),p.TgZ(14,"div",24),p._UZ(15,"input",29),p.qZA(),p.TgZ(16,"div",22),p.TgZ(17,"label",30),p._uU(18,"Drag"),p.qZA(),p.qZA(),p.TgZ(19,"div",24),p.TgZ(20,"p-checkbox",31),p.NdJ("ngModelChange",function(e){return p.CHM(t),p.oxw().draggable=e}),p.qZA(),p.qZA(),p.qZA()}if(2&e){var o=p.oxw();p.xp6(5),p.Q6J("ngModel",o.markerTitle),p.xp6(5),p.Q6J("ngModel",o.selectedPosition.lat()),p.xp6(5),p.Q6J("ngModel",o.selectedPosition.lng()),p.xp6(5),p.Akn(p.DdM(6,b)),p.Q6J("ngModel",o.draggable)}}function M(e,n){if(1&e){var t=p.EpF();p.TgZ(0,"div"),p.TgZ(1,"button",32),p.NdJ("click",function(){return p.CHM(t),p.oxw().addMarker()}),p.qZA(),p.qZA()}}var q,_=function(){return{width:"100%",height:"320px","margin-bottom":"1em"}},U=function(){return{width:"300px"}},w=function(){var e=function(){return a(function e(n){t(this,e),this.messageService=n},[{key:"ngOnInit",value:function(){this.options={center:{lat:36.890257,lng:30.707417},zoom:12},this.initOverlays(),this.infoWindow=new google.maps.InfoWindow}},{key:"handleMapClick",value:function(e){this.dialogVisible=!0,this.selectedPosition=e.latLng}},{key:"handleOverlayClick",value:function(e){if(null!=e.overlay.getTitle){var n=e.overlay.getTitle();this.infoWindow.setContent("<div>"+n+"</div>"),this.infoWindow.open(e.map,e.overlay),e.map.setCenter(e.overlay.getPosition()),this.messageService.add({severity:"info",summary:"Marker Selected",detail:n})}else this.messageService.add({severity:"info",summary:"Shape Selected",detail:""})}},{key:"addMarker",value:function(){this.overlays.push(new google.maps.Marker({position:{lat:this.selectedPosition.lat(),lng:this.selectedPosition.lng()},title:this.markerTitle,draggable:this.draggable})),this.markerTitle=null,this.dialogVisible=!1}},{key:"handleDragEnd",value:function(e){this.messageService.add({severity:"info",summary:"Marker Dragged",detail:e.overlay.getTitle()})}},{key:"initOverlays",value:function(){this.overlays&&this.overlays.length||(this.overlays=[new google.maps.Marker({position:{lat:36.879466,lng:30.667648},title:"Konyaalti"}),new google.maps.Marker({position:{lat:36.883707,lng:30.689216},title:"Ataturk Park"}),new google.maps.Marker({position:{lat:36.885233,lng:30.702323},title:"Oldtown"}),new google.maps.Polygon({paths:[{lat:36.9177,lng:30.7854},{lat:36.8851,lng:30.7802},{lat:36.8829,lng:30.8111},{lat:36.9177,lng:30.8159}],strokeOpacity:.5,strokeWeight:1,fillColor:"#1976D2",fillOpacity:.35}),new google.maps.Circle({center:{lat:36.90707,lng:30.56533},fillColor:"#1976D2",fillOpacity:.35,strokeWeight:1,radius:1500}),new google.maps.Polyline({path:[{lat:36.86149,lng:30.63743},{lat:36.86341,lng:30.72463}],geodesic:!0,strokeColor:"#FF0000",strokeOpacity:.5,strokeWeight:2})])}},{key:"zoomIn",value:function(e){e.setZoom(e.getZoom()+1)}},{key:"zoomOut",value:function(e){e.setZoom(e.getZoom()-1)}},{key:"clear",value:function(){this.overlays=[]}}])}();return e.\u0275fac=function(n){return new(n||e)(p.Y36(g.ez))},e.\u0275cmp=p.Xpm({type:e,selectors:[["ng-component"]],features:[p._Bn([g.ez])],decls:233,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","gmap"],[1,"content-section","implementation"],[1,"card"],[3,"options","overlays","onMapClick","onOverlayClick","onOverlayDragEnd"],["gmap",""],["type","button","pButton","","label","Clear","icon","pi pi-times",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom In","icon","pi pi-plus",2,"margin-right",".25em",3,"click"],["type","button","pButton","","label","Zoom Out","icon","pi pi-minus",3,"click"],["showEffect","fade","header","New Location",3,"visible","visibleChange"],["class","p-grid p-fluid",4,"ngIf"],["pTemplate","footer"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/gmap","target","_blank",1,"btn-viewsource"],[1,"p-grid","p-fluid"],[1,"p-col-2"],["for","title"],[1,"p-col-10"],["type","text","pInputText","","id","title",3,"ngModel","ngModelChange"],["for","lat"],["id","lat","type","text","readonly","","pInputText","",3,"ngModel"],["for","lng"],["id","lng","type","text","readonly","","pInputText","",3,"ngModel"],["for","drg"],["binary","true",3,"ngModel","ngModelChange"],["type","button","pButton","","label","Add Marker","icon","pi pi-plus",3,"click"]],template:function(e,n){if(1&e){var t=p.EpF();p.TgZ(0,"div",0),p.TgZ(1,"div",1),p.TgZ(2,"h1"),p._uU(3,"GMap"),p.qZA(),p.TgZ(4,"p"),p._uU(5,"GMap component provides integration with Google Maps API. This sample demontrates various uses cases like binding, overlays and events. Click the map to add a new item."),p.qZA(),p.qZA(),p._UZ(6,"app-demoActions",2),p.qZA(),p.TgZ(7,"div",3),p._UZ(8,"p-toast"),p.TgZ(9,"div",4),p.TgZ(10,"p-gmap",5,6),p.NdJ("onMapClick",function(e){return n.handleMapClick(e)})("onOverlayClick",function(e){return n.handleOverlayClick(e)})("onOverlayDragEnd",function(e){return n.handleDragEnd(e)}),p.qZA(),p.TgZ(12,"button",7),p.NdJ("click",function(){return n.clear()}),p.qZA(),p.TgZ(13,"button",8),p.NdJ("click",function(){p.CHM(t);var e=p.MAs(11);return n.zoomIn(e.getMap())}),p.qZA(),p.TgZ(14,"button",9),p.NdJ("click",function(){p.CHM(t);var e=p.MAs(11);return n.zoomOut(e.getMap())}),p.qZA(),p.TgZ(15,"p-dialog",10),p.NdJ("visibleChange",function(e){return n.dialogVisible=e}),p.YNc(16,T,21,7,"div",11),p.YNc(17,M,2,0,"ng-template",12),p.qZA(),p.qZA(),p.qZA(),p.TgZ(18,"div",13),p.TgZ(19,"p-tabView"),p.TgZ(20,"p-tabPanel",14),p.TgZ(21,"h5"),p._uU(22,"Import"),p.qZA(),p.TgZ(23,"app-code",15),p.IAx(),p._uU(24,"\nimport {GMapModule} from 'primeng/gmap';\n"),p.fQ9(),p.qZA(),p.TgZ(25,"h5"),p._uU(26,"Getting Started"),p.qZA(),p.TgZ(27,"p"),p._uU(28,"A map is initialized with options and dimensions. Refer to the google maps api for the list of available options."),p.qZA(),p.TgZ(29,"app-code",16),p.IAx(),p._uU(30,"\n<p-gmap [options]=\"options\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),p.fQ9(),p.qZA(),p.TgZ(31,"app-code",15),p.IAx(),p._uU(32,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n}\n"),p.fQ9(),p.qZA(),p.TgZ(33,"h5"),p._uU(34,"Overlays"),p.qZA(),p.TgZ(35,"p"),p._uU(36,"GMap can display any type of overlay such as markers, polygons and circles. Overlay instances are bound using the overlays property array. Overlays are aware of one-way binding so whenever the array changes, gmap updates itself."),p.qZA(),p.TgZ(37,"app-code",16),p.IAx(),p._uU(38,"\n<p-gmap [options]=\"options\" [overlays]=\"overlays\" [style]=\"{'width':'100%','height':'320px'}\" ></p-gmap>\n"),p.fQ9(),p.qZA(),p.TgZ(39,"app-code",15),p.IAx(),p._uU(40,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n}\n"),p.fQ9(),p.qZA(),p.TgZ(41,"h5"),p._uU(42,"Events"),p.qZA(),p.TgZ(43,"p"),p._uU(44,"GMap provides common callbacks to hook into events including map click, overlay click and overlay dragging."),p.qZA(),p.TgZ(45,"app-code",16),p.IAx(),p._uU(46,'\n<p-gmap [options]="options" [overlays]="overlays" [style]="{\'width\':\'100%\',\'height\':\'320px\'}"\n            (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)"></p-gmap>\n'),p.fQ9(),p.qZA(),p.TgZ(47,"app-code",15),p.IAx(),p._uU(48,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n            new google.maps.Polygon({paths: [\n                {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n            ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n            }),\n            new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n            new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n        ];\n    }\n\n    handleMapClick(event) {\n        //event: MouseEvent of Google Maps api\n    }\n\n    handleOverlayClick(event) {\n        //event.originalEvent: MouseEvent of Google Maps api\n        //event.overlay: Clicked overlay\n        //event.map: Map instance\n    }\n}\n"),p.fQ9(),p.qZA(),p.TgZ(49,"h5"),p._uU(50,"Google Maps API"),p.qZA(),p.TgZ(51,"p"),p._uU(52,"In case you need to access the map instance directly, use the getMap() method."),p.qZA(),p.TgZ(53,"app-code",16),p.IAx(),p._uU(54,'\n<p-gmap #gmap [options]="options"></p-gmap>\n\n<button type="button" pButton label="Zoom In" icon="pi-search-plus" (click)="zoomIn(gmap.getMap())"></button>\n'),p.fQ9(),p.qZA(),p.TgZ(55,"app-code",15),p.IAx(),p._uU(56,"\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n}\n"),p.fQ9(),p.qZA(),p.TgZ(57,"p"),p._uU(58,"Another option is to to get the map object directly after init via (onMapReady) event. In the example below, google.maps.Map is used for adjusting map bounds to markers."),p.qZA(),p.TgZ(59,"app-code",16),p.IAx(),p._uU(60,'\n<p-gmap #gmap [options]="options" [overlays]="overlays" [style]="mapStyle"\n    (onMapReady)="setMap($event)"></p-gmap>\n'),p.fQ9(),p.qZA(),p.TgZ(61,"p"),p._uU(62,"Then from your component you would write"),p.qZA(),p.TgZ(63,"app-code",15),p.IAx(),p._uU(64,'\nexport class MyModel {\n\n    options: any;\n\n    overlays: any[];\n\n    map: google.maps.Map;\n\n    setMap(event) {\n        this.map = event.map;\n    }\n\n    ngOnInit() {\n        let bounds = new google.maps.LatLngBounds();\n        this.overlays = [\n            new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:"Konyaalti"}),\n            new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:"Ataturk Park"}),\n            new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:"Oldtown"}),\n        ]\n        // ... extend bounds\n        this.overlays.forEach(marker => {\n            bounds.extend(marker.getPosition());\n        });\n\n        setTimeout(()=> { // map will need some time to load\n            this.map.fitBounds(bounds); // Map object used directly\n        }, 1000);\n    }\n}\n'),p.fQ9(),p.qZA(),p.TgZ(65,"h5"),p._uU(66,"Properties"),p.qZA(),p.TgZ(67,"div",17),p.TgZ(68,"table",18),p.TgZ(69,"thead"),p.TgZ(70,"tr"),p.TgZ(71,"th"),p._uU(72,"Name"),p.qZA(),p.TgZ(73,"th"),p._uU(74,"Type"),p.qZA(),p.TgZ(75,"th"),p._uU(76,"Default"),p.qZA(),p.TgZ(77,"th"),p._uU(78,"Description"),p.qZA(),p.qZA(),p.qZA(),p.TgZ(79,"tbody"),p.TgZ(80,"tr"),p.TgZ(81,"td"),p._uU(82,"options"),p.qZA(),p.TgZ(83,"td"),p._uU(84,"any"),p.qZA(),p.TgZ(85,"td"),p._uU(86,"null"),p.qZA(),p.TgZ(87,"td"),p._uU(88,"Google Maps API configuration object."),p.qZA(),p.qZA(),p.TgZ(89,"tr"),p.TgZ(90,"td"),p._uU(91,"overlays"),p.qZA(),p.TgZ(92,"td"),p._uU(93,"array"),p.qZA(),p.TgZ(94,"td"),p._uU(95,"null"),p.qZA(),p.TgZ(96,"td"),p._uU(97,"An array of overlays to display."),p.qZA(),p.qZA(),p.TgZ(98,"tr"),p.TgZ(99,"td"),p._uU(100,"style"),p.qZA(),p.TgZ(101,"td"),p._uU(102,"string"),p.qZA(),p.TgZ(103,"td"),p._uU(104,"null"),p.qZA(),p.TgZ(105,"td"),p._uU(106,"Inline style of the component."),p.qZA(),p.qZA(),p.TgZ(107,"tr"),p.TgZ(108,"td"),p._uU(109,"styleClass"),p.qZA(),p.TgZ(110,"td"),p._uU(111,"string"),p.qZA(),p.TgZ(112,"td"),p._uU(113,"null"),p.qZA(),p.TgZ(114,"td"),p._uU(115,"Style class of the component."),p.qZA(),p.qZA(),p.qZA(),p.qZA(),p.qZA(),p.TgZ(116,"h5"),p._uU(117,"Events"),p.qZA(),p.TgZ(118,"div",17),p.TgZ(119,"table",18),p.TgZ(120,"thead"),p.TgZ(121,"tr"),p.TgZ(122,"th"),p._uU(123,"Name"),p.qZA(),p.TgZ(124,"th"),p._uU(125,"Parameters"),p.qZA(),p.TgZ(126,"th"),p._uU(127,"Description"),p.qZA(),p.qZA(),p.qZA(),p.TgZ(128,"tbody"),p.TgZ(129,"tr"),p.TgZ(130,"td"),p._uU(131,"onMapClick"),p.qZA(),p.TgZ(132,"td"),p._uU(133,"event: Google Maps MouseEvent"),p.qZA(),p.TgZ(134,"td"),p._uU(135,"Callback to invoke when map is clicked except markers."),p.qZA(),p.qZA(),p.TgZ(136,"tr"),p.TgZ(137,"td"),p._uU(138,"onMapDragEnd"),p.qZA(),p.TgZ(139,"td"),p._uU(140,"originalEvent: Google Maps dragend"),p._UZ(141,"br"),p.qZA(),p.TgZ(142,"td"),p._uU(143,"Callback to invoke when map drag (i.e. pan) has ended."),p.qZA(),p.qZA(),p.TgZ(144,"tr"),p.TgZ(145,"td"),p._uU(146,"onMapReady"),p.qZA(),p.TgZ(147,"td"),p._uU(148,"event.map: Google Maps Instance"),p.qZA(),p.TgZ(149,"td"),p._uU(150,"Callback to invoke when the map is ready to be used."),p.qZA(),p.qZA(),p.TgZ(151,"tr"),p.TgZ(152,"td"),p._uU(153,"onOverlayClick"),p.qZA(),p.TgZ(154,"td"),p._uU(155,"originalEvent: Google Maps MouseEvent "),p._UZ(156,"br"),p._uU(157," overlay: Clicked overlay "),p._UZ(158,"br"),p._uU(159," map: Map instance "),p._UZ(160,"br"),p.qZA(),p.TgZ(161,"td"),p._uU(162,"Callback to invoke when an overlay is clicked."),p.qZA(),p.qZA(),p.TgZ(163,"tr"),p.TgZ(164,"td"),p._uU(165,"onOverlayDblClick"),p.qZA(),p.TgZ(166,"td"),p._uU(167,"originalEvent: Google Maps MouseEvent "),p._UZ(168,"br"),p._uU(169," overlay: Clicked overlay "),p._UZ(170,"br"),p._uU(171," map: Map instance "),p._UZ(172,"br"),p.qZA(),p.TgZ(173,"td"),p._uU(174,"Callback to invoke when an overlay is double clicked."),p.qZA(),p.qZA(),p.TgZ(175,"tr"),p.TgZ(176,"td"),p._uU(177,"onOverlayDrag"),p.qZA(),p.TgZ(178,"td"),p._uU(179,"originalEvent: Google Maps MouseEvent "),p._UZ(180,"br"),p._uU(181," overlay: Clicked overlay "),p._UZ(182,"br"),p._uU(183," map: Map instance "),p._UZ(184,"br"),p.qZA(),p.TgZ(185,"td"),p._uU(186,"Callback to invoke when an overlay is being dragged."),p.qZA(),p.qZA(),p.TgZ(187,"tr"),p.TgZ(188,"td"),p._uU(189,"onOverlayDragEnd"),p.qZA(),p.TgZ(190,"td"),p._uU(191,"originalEvent: Google Maps MouseEvent "),p._UZ(192,"br"),p._uU(193," overlay: Clicked overlay "),p._UZ(194,"br"),p._uU(195," map: Map instance "),p._UZ(196,"br"),p.qZA(),p.TgZ(197,"td"),p._uU(198,"Callback to invoke when an overlay drag ends."),p.qZA(),p.qZA(),p.TgZ(199,"tr"),p.TgZ(200,"td"),p._uU(201,"onOverlayDragStart"),p.qZA(),p.TgZ(202,"td"),p._uU(203,"originalEvent: Google Maps MouseEvent "),p._UZ(204,"br"),p._uU(205," overlay: Clicked overlay "),p._UZ(206,"br"),p._uU(207," map: Map instance "),p._UZ(208,"br"),p.qZA(),p.TgZ(209,"td"),p._uU(210,"Callback to invoke when an overlay drag starts."),p.qZA(),p.qZA(),p.TgZ(211,"tr"),p.TgZ(212,"td"),p._uU(213,"onZoomChanged"),p.qZA(),p.TgZ(214,"td"),p._uU(215,"originalEvent: Google Maps zoom_changed"),p.qZA(),p.TgZ(216,"td"),p._uU(217,"Callback to invoke when zoom level has changed."),p.qZA(),p.qZA(),p.qZA(),p.qZA(),p.qZA(),p.TgZ(218,"h5"),p._uU(219,"Dependencies"),p.qZA(),p.TgZ(220,"p"),p._uU(221,"Google Maps API."),p.qZA(),p.qZA(),p.TgZ(222,"p-tabPanel",19),p.TgZ(223,"a",20),p.TgZ(224,"span"),p._uU(225,"View on GitHub"),p.qZA(),p.qZA(),p.TgZ(226,"app-code",16),p.IAx(),p._uU(227,'\n<p-toast [style]="{marginTop: \'80px\'}"></p-toast>\n\n<p-gmap #gmap [style]="{\'width\':\'100%\',\'height\':\'320px\', \'margin-bottom\': \'1em\'}" [options]="options" [overlays]="overlays"\n       (onMapClick)="handleMapClick($event)" (onOverlayClick)="handleOverlayClick($event)" (onOverlayDragEnd)="handleDragEnd($event)"></p-gmap>\n\n<button type="button" pButton label="Clear" icon="pi pi-times" (click)="clear()" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom In" icon="pi pi-plus" (click)="zoomIn(gmap.getMap())" style="margin-right:.25em"></button>\n<button type="button" pButton label="Zoom Out" icon="pi pi-minus" (click)="zoomOut(gmap.getMap())"></button>\n\n<p-dialog showEffect="fade" [(visible)]="dialogVisible" header="New Location" [style]="{width: \'300px\'}">>\n    <div class="p-grid p-fluid" *ngIf="selectedPosition">\n        <div class="p-col-2"><label for="title">Label</label></div>\n        <div class="p-col-10"><input type="text" pInputText id="title" [(ngModel)]="markerTitle"></div>\n\n        <div class="p-col-2"><label for="lat">Lat</label></div>\n        <div class="p-col-10"><input id="lat" type="text" readonly pInputText [ngModel]="selectedPosition.lat()"></div>\n\n        <div class="p-col-2"><label for="lng">Lng</label></div>\n        <div class="p-col-10"><input id="lng" type="text" readonly pInputText [ngModel]="selectedPosition.lng()"></div>\n\n        <div class="p-col-2"><label for="drg">Drag</label></div>\n        <div class="p-col-10"><p-checkbox [(ngModel)]="draggable" binary="true" [style]="{\'margin-top\':\'.25em\'}"></p-checkbox></div>\n    </div>\n    <ng-template pTemplate="footer">\n        <div>\n            <button type="button" pButton label="Add Marker" icon="pi-plus" (click)="addMarker()"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n'),p.fQ9(),p.qZA(),p.TgZ(228,"app-code",15),p.IAx(),p._uU(229,"\nexport class GMapDemo implements OnInit {\n\n    options: any;\n\n    overlays: any[];\n\n    dialogVisible: boolean;\n\n    markerTitle: string;\n\n    selectedPosition: any;\n\n    infoWindow: any;\n\n    draggable: boolean;\n\n    constructor(private messageService: MessageService) {}\n\n    ngOnInit() {\n        this.options = {\n            center: {lat: 36.890257, lng: 30.707417},\n            zoom: 12\n        };\n\n        this.initOverlays();\n\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    handleMapClick(event) {\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n    }\n\n    handleOverlayClick(event) {\n        let isMarker = event.overlay.getTitle != undefined;\n\n        if (isMarker) {\n            let title = event.overlay.getTitle();\n            this.infoWindow.setContent('"),p.TgZ(230,"div"),p._uU(231,"' + title + '"),p.qZA(),p._uU(232,"');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n\n            this.messageService.add({severity:'info', summary:'Marker Selected', detail: title});\n        }\n        else {\n            this.messageService.add({severity:'info', summary:'Shape Selected', detail: ''});\n        }\n    }\n\n    addMarker() {\n        this.overlays.push(new google.maps.Marker({position:{lat: this.selectedPosition.lat(), lng: this.selectedPosition.lng()}, title:this.markerTitle, draggable: this.draggable}));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n\n    handleDragEnd(event) {\n        this.messageService.add({severity:'info', summary:'Marker Dragged', detail: event.overlay.getTitle()});\n    }\n\n    initOverlays() {\n        if (!this.overlays||!this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({position: {lat: 36.879466, lng: 30.667648}, title:\"Konyaalti\"}),\n                new google.maps.Marker({position: {lat: 36.883707, lng: 30.689216}, title:\"Ataturk Park\"}),\n                new google.maps.Marker({position: {lat: 36.885233, lng: 30.702323}, title:\"Oldtown\"}),\n                new google.maps.Polygon({paths: [\n                    {lat: 36.9177, lng: 30.7854},{lat: 36.8851, lng: 30.7802},{lat: 36.8829, lng: 30.8111},{lat: 36.9177, lng: 30.8159}\n                ], strokeOpacity: 0.5, strokeWeight: 1,fillColor: '#1976D2', fillOpacity: 0.35\n                }),\n                new google.maps.Circle({center: {lat: 36.90707, lng: 30.56533}, fillColor: '#1976D2', fillOpacity: 0.35, strokeWeight: 1, radius: 1500}),\n                new google.maps.Polyline({path: [{lat: 36.86149, lng: 30.63743},{lat: 36.86341, lng: 30.72463}], geodesic: true, strokeColor: '#FF0000', strokeOpacity: 0.5, strokeWeight: 2})\n            ];\n        }\n    }\n\n    zoomIn(map) {\n        map.setZoom(map.getZoom()+1);\n    }\n\n    zoomOut(map) {\n        map.setZoom(map.getZoom()-1);\n    }\n\n    clear() {\n        this.overlays = [];\n    }\n}\n"),p.fQ9(),p.qZA(),p.qZA(),p.qZA(),p.qZA()}2&e&&(p.xp6(10),p.Akn(p.DdM(8,_)),p.Q6J("options",n.options)("overlays",n.overlays),p.xp6(5),p.Akn(p.DdM(9,U)),p.Q6J("visible",n.dialogVisible),p.xp6(1),p.Q6J("ngIf",n.selectedPosition))},directives:[d.P,c.FN,u,m.Hq,Z.V,l.O5,y.jx,h.xf,h.x4,f.h,r.Fj,k.o,r.JJ,r.On,A.XZ],styles:[".p-col-2[_ngcontent-%COMP%]{display:flex;align-self:center}"]}),e}(),C=function(){var e=a(function e(){t(this,e)});return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=p.oAB({type:e}),e.\u0275inj=p.cJS({imports:[[s.Bz.forChild([{path:"",component:w}])],s.Bz]}),e}(),O=i(35167),x=i(18897),D=i(50514),E=i(56463),I=i(59202),P=((q=a(function e(){t(this,e)})).\u0275fac=function(e){return new(e||q)},q.\u0275mod=p.oAB({type:q}),q.\u0275inj=p.cJS({imports:[[l.ez,r.u5,C,v,O.EV,k.j,x.nD,D.S,E.hJ,I.LU,f.a,d.L]]}),q)}}])}();
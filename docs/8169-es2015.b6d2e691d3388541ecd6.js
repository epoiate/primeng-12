(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[8169],{90628:function(e,t,n){"use strict";n.d(t,{h:function(){return c},a:function(){return g}});var o=n(61116),a=n(87368);const Z=["code"],l=["*"];let c=(()=>{class e{constructor(e){this.el=e,this.lang="markup"}ngAfterViewInit(){window.Prism&&window.Prism.highlightElement(this.codeViewChild.nativeElement)}}return e.\u0275fac=function(t){return new(t||e)(a.Y36(a.SBq))},e.\u0275cmp=a.Xpm({type:e,selectors:[["app-code"]],viewQuery:function(e,t){if(1&e&&a.Gf(Z,5),2&e){let e;a.iGM(e=a.CRH())&&(t.codeViewChild=e.first)}},inputs:{lang:"lang"},ngContentSelectors:l,decls:5,vars:1,consts:[[3,"ngClass"],["code",""]],template:function(e,t){1&e&&(a.F$t(),a.TgZ(0,"pre",0),a.TgZ(1,"code",null,1),a.Hsn(3),a._uU(4,"\n"),a.qZA(),a.qZA()),2&e&&a.Q6J("ngClass","language-"+t.lang)},directives:[o.mk],encapsulation:2}),e})(),g=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=a.oAB({type:e}),e.\u0275inj=a.cJS({imports:[[o.ez]]}),e})()},98169:function(e,t,n){"use strict";n.r(t),n.d(t,{CheckboxDemoModule:function(){return b}});var o=n(61116),a=n(11462),Z=n(42066),l=n(87368),c=n(12774),g=n(93876),i=n(47299),u=n(90628),d=n(74136);function s(e,t){if(1&e){const e=l.EpF();l.TgZ(0,"div",5),l.TgZ(1,"p-checkbox",30),l.NdJ("ngModelChange",function(t){return l.CHM(e),l.oxw().selectedCategories=t}),l.qZA(),l.TgZ(2,"label",31),l._uU(3),l.qZA(),l.qZA()}if(2&e){const e=t.$implicit,n=l.oxw();l.xp6(1),l.Q6J("value",e)("ngModel",n.selectedCategories)("inputId",e.key)("disabled","R"===e.key),l.xp6(1),l.Q6J("for",e.key),l.xp6(1),l.Oqu(e.name)}}function r(e,t){1&e&&l._UZ(0,"iframe",32)}const A=function(){return["/theming"]};let h=(()=>{class e{constructor(){this.selectedCities=[],this.selectedCategories=["Technology","Sports"],this.categories=[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],this.checked=!1}ngOnInit(){this.selectedCategories=this.categories.slice(1,3)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l.Xpm({type:e,selectors:[["ng-component"]],decls:358,vars:9,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","checkbox","stackblitz","checkbox-demo"],[1,"content-section","implementation"],[1,"card"],[1,"p-field-checkbox"],["binary","true","inputId","binary",3,"ngModel","ngModelChange"],["for","binary"],["name","group1","value","New York","inputId","ny",3,"ngModel","ngModelChange"],["for","ny"],["name","group1","value","San Francisco","inputId","sf",3,"ngModel","ngModelChange"],["for","sf"],["name","group1","value","Los Angeles","inputId","la",3,"ngModel","ngModelChange"],["for","la"],["name","group1","value","Chicago","inputId","ch",3,"ngModel","ngModelChange"],["for","ch"],["class","p-field-checkbox",4,"ngFor","ngForOf"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],["href","https://github.com/angular/angular/issues/17685"],[1,"doc-tablewrapper"],[1,"doc-table"],["href","#",3,"routerLink"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/checkbox","target","_blank",1,"btn-viewsource"],["href","https://stackblitz.com/edit/primeng-checkbox-demo","target","_blank",1,"btn-viewsource",2,"margin-left",".5em"],["header","StackBlitz"],["pTemplate","content"],["name","group2","value","category",3,"value","ngModel","inputId","disabled","ngModelChange"],[3,"for"],["src","https://stackblitz.com/edit/primeng-checkbox-demo?embed=1",2,"width","100%","height","768px","border","none"]],template:function(e,t){1&e&&(l.TgZ(0,"div",0),l.TgZ(1,"div",1),l.TgZ(2,"h1"),l._uU(3,"Checkbox"),l.qZA(),l.TgZ(4,"p"),l._uU(5,"Checkbox is an extension to standard checkbox element with theming."),l.qZA(),l.qZA(),l._UZ(6,"app-demoActions",2),l.qZA(),l.TgZ(7,"div",3),l.TgZ(8,"div",4),l.TgZ(9,"h5"),l._uU(10,"Basic"),l.qZA(),l.TgZ(11,"div",5),l.TgZ(12,"p-checkbox",6),l.NdJ("ngModelChange",function(e){return t.checked=e}),l.qZA(),l.TgZ(13,"label",7),l._uU(14),l.qZA(),l.qZA(),l.TgZ(15,"h5"),l._uU(16,"Multiple"),l.qZA(),l.TgZ(17,"div",5),l.TgZ(18,"p-checkbox",8),l.NdJ("ngModelChange",function(e){return t.selectedCities=e}),l.qZA(),l.TgZ(19,"label",9),l._uU(20,"New York"),l.qZA(),l.qZA(),l.TgZ(21,"div",5),l.TgZ(22,"p-checkbox",10),l.NdJ("ngModelChange",function(e){return t.selectedCities=e}),l.qZA(),l.TgZ(23,"label",11),l._uU(24,"San Francisco"),l.qZA(),l.qZA(),l.TgZ(25,"div",5),l.TgZ(26,"p-checkbox",12),l.NdJ("ngModelChange",function(e){return t.selectedCities=e}),l.qZA(),l.TgZ(27,"label",13),l._uU(28,"Los Angeles"),l.qZA(),l.qZA(),l.TgZ(29,"div",5),l.TgZ(30,"p-checkbox",14),l.NdJ("ngModelChange",function(e){return t.selectedCities=e}),l.qZA(),l.TgZ(31,"label",15),l._uU(32,"Chicago"),l.qZA(),l.qZA(),l.TgZ(33,"h5"),l._uU(34,"Dynamic Values, Preselection, Value Binding and Disabled Option"),l.qZA(),l.YNc(35,s,4,6,"div",16),l.qZA(),l.qZA(),l.TgZ(36,"div",17),l.TgZ(37,"p-tabView"),l.TgZ(38,"p-tabPanel",18),l.TgZ(39,"h5"),l._uU(40,"Import"),l.qZA(),l.TgZ(41,"app-code",19),l.IAx(),l._uU(42,"\nimport {CheckboxModule} from 'primeng/checkbox';\n"),l.fQ9(),l.qZA(),l.TgZ(43,"h5"),l._uU(44,"Getting Started"),l.qZA(),l.TgZ(45,"p"),l._uU(46,"Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value."),l.qZA(),l.TgZ(47,"h4"),l._uU(48,"Multiple Values"),l.qZA(),l.TgZ(49,"p"),l._uU(50,"Multiple mode is enabled by default, ngModel property refers to an array to bind the selected values."),l.qZA(),l.TgZ(51,"app-code",20),l.IAx(),l._uU(52,'\n<p-checkbox name="groupname" value="val1" [(ngModel)]="selectedValues"></p-checkbox>\n<p-checkbox name="groupname" value="val2" [(ngModel)]="selectedValues"></p-checkbox>\n'),l.fQ9(),l.qZA(),l.TgZ(53,"app-code",19),l.IAx(),l._uU(54,"\nexport class ModelComponent {\n\n    selectedValues: string[] = [];\n\n}\n"),l.fQ9(),l.qZA(),l.TgZ(55,"p"),l._uU(56,"As ngModel is two-way binding enabled, prepopulating the model array with values is enough to display the related checkboxes as checked by default."),l.qZA(),l.TgZ(57,"app-code",19),l.IAx(),l._uU(58,"\nexport class ModelComponent {\n\n    selectedValues: string[] = ['val1','val2'];\n\n}\n"),l.fQ9(),l.qZA(),l.TgZ(59,"h4"),l._uU(60,"Label"),l.qZA(),l.TgZ(61,"p"),l._uU(62,"The label attribute provides a label text for the checkbox. This label is also clickable and toggles the checked state."),l.qZA(),l.TgZ(63,"app-code",20),l.IAx(),l._uU(64,'\n<p-checkbox name="groupname" value="val1" label="Value 1" [(ngModel)]="selectedValues"></p-checkbox>\n<p-checkbox name="groupname" value="val2" label="Value 2" [(ngModel)]="selectedValues"></p-checkbox>\n'),l.fQ9(),l.qZA(),l.TgZ(65,"h4"),l._uU(66,"Boolean Value"),l.qZA(),l.TgZ(67,"p"),l._uU(68,"A single boolean value can be bound using the ngModel property as well by enabling the binary option."),l.qZA(),l.TgZ(69,"app-code",19),l.IAx(),l._uU(70,"\nexport class ModelComponent {\n\n    value: boolean;\n\n}\n"),l.fQ9(),l.qZA(),l.TgZ(71,"app-code",20),l.IAx(),l._uU(72,'\n<p-checkbox [(ngModel)]="value" [binary]="true"></p-checkbox>\n'),l.fQ9(),l.qZA(),l.TgZ(73,"h5"),l._uU(74,"Model Driven Forms"),l.qZA(),l.TgZ(75,"p"),l._uU(76,"Checkbox can be used in a model driven form as well. In this case, due to an "),l.TgZ(77,"a",21),l._uU(78,"issue"),l.qZA(),l._uU(79," in Angular bind the formControl instance instead of using formControlName."),l.qZA(),l.TgZ(80,"app-code",20),l.IAx(),l._uU(81,'\n\x3c!-- Wrong --\x3e\n<p-checkbox formControlName="cities"></p-checkbox>\n\n\x3c!-- Correct --\x3e\n<p-checkbox [formControl]="myFormGroup.controls[\'cities\']"></p-checkbox>\n'),l.fQ9(),l.qZA(),l.TgZ(82,"h5"),l._uU(83,"Properties"),l.qZA(),l.TgZ(84,"div",22),l.TgZ(85,"table",23),l.TgZ(86,"thead"),l.TgZ(87,"tr"),l.TgZ(88,"th"),l._uU(89,"Name"),l.qZA(),l.TgZ(90,"th"),l._uU(91,"Type"),l.qZA(),l.TgZ(92,"th"),l._uU(93,"Default"),l.qZA(),l.TgZ(94,"th"),l._uU(95,"Description"),l.qZA(),l.qZA(),l.qZA(),l.TgZ(96,"tbody"),l.TgZ(97,"tr"),l.TgZ(98,"td"),l._uU(99,"name"),l.qZA(),l.TgZ(100,"td"),l._uU(101,"string"),l.qZA(),l.TgZ(102,"td"),l._uU(103,"null"),l.qZA(),l.TgZ(104,"td"),l._uU(105,"Name of the checkbox group."),l.qZA(),l.qZA(),l.TgZ(106,"tr"),l.TgZ(107,"td"),l._uU(108,"value"),l.qZA(),l.TgZ(109,"td"),l._uU(110,"any"),l.qZA(),l.TgZ(111,"td"),l._uU(112,"null"),l.qZA(),l.TgZ(113,"td"),l._uU(114,"Value of the checkbox."),l.qZA(),l.qZA(),l.TgZ(115,"tr"),l.TgZ(116,"td"),l._uU(117,"label"),l.qZA(),l.TgZ(118,"td"),l._uU(119,"string"),l.qZA(),l.TgZ(120,"td"),l._uU(121,"null"),l.qZA(),l.TgZ(122,"td"),l._uU(123,"Label of the checkbox."),l.qZA(),l.qZA(),l.TgZ(124,"tr"),l.TgZ(125,"td"),l._uU(126,"disabled"),l.qZA(),l.TgZ(127,"td"),l._uU(128,"boolean"),l.qZA(),l.TgZ(129,"td"),l._uU(130,"false"),l.qZA(),l.TgZ(131,"td"),l._uU(132,"When present, it specifies that the element should be disabled."),l.qZA(),l.qZA(),l.TgZ(133,"tr"),l.TgZ(134,"td"),l._uU(135,"binary"),l.qZA(),l.TgZ(136,"td"),l._uU(137,"boolean"),l.qZA(),l.TgZ(138,"td"),l._uU(139,"false"),l.qZA(),l.TgZ(140,"td"),l._uU(141,"Allows to select a boolean value instead of multiple values."),l.qZA(),l.qZA(),l.TgZ(142,"tr"),l.TgZ(143,"td"),l._uU(144,"tabindex"),l.qZA(),l.TgZ(145,"td"),l._uU(146,"number"),l.qZA(),l.TgZ(147,"td"),l._uU(148,"null"),l.qZA(),l.TgZ(149,"td"),l._uU(150,"Index of the element in tabbing order."),l.qZA(),l.qZA(),l.TgZ(151,"tr"),l.TgZ(152,"td"),l._uU(153,"inputId"),l.qZA(),l.TgZ(154,"td"),l._uU(155,"string"),l.qZA(),l.TgZ(156,"td"),l._uU(157,"null"),l.qZA(),l.TgZ(158,"td"),l._uU(159,"Identifier of the focus input to match a label defined for the component."),l.qZA(),l.qZA(),l.TgZ(160,"tr"),l.TgZ(161,"td"),l._uU(162,"ariaLabelledBy"),l.qZA(),l.TgZ(163,"td"),l._uU(164,"string"),l.qZA(),l.TgZ(165,"td"),l._uU(166,"null"),l.qZA(),l.TgZ(167,"td"),l._uU(168,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),l.qZA(),l.qZA(),l.TgZ(169,"tr"),l.TgZ(170,"td"),l._uU(171,"ariaLabel"),l.qZA(),l.TgZ(172,"td"),l._uU(173,"string"),l.qZA(),l.TgZ(174,"td"),l._uU(175,"null"),l.qZA(),l.TgZ(176,"td"),l._uU(177,"Used to define a string that labels the input element."),l.qZA(),l.qZA(),l.TgZ(178,"tr"),l.TgZ(179,"td"),l._uU(180,"style"),l.qZA(),l.TgZ(181,"td"),l._uU(182,"object"),l.qZA(),l.TgZ(183,"td"),l._uU(184,"null"),l.qZA(),l.TgZ(185,"td"),l._uU(186,"Inline style of the component."),l.qZA(),l.qZA(),l.TgZ(187,"tr"),l.TgZ(188,"td"),l._uU(189,"styleClass"),l.qZA(),l.TgZ(190,"td"),l._uU(191,"string"),l.qZA(),l.TgZ(192,"td"),l._uU(193,"null"),l.qZA(),l.TgZ(194,"td"),l._uU(195,"Style class of the component."),l.qZA(),l.qZA(),l.TgZ(196,"tr"),l.TgZ(197,"td"),l._uU(198,"labelStyleClass"),l.qZA(),l.TgZ(199,"td"),l._uU(200,"string"),l.qZA(),l.TgZ(201,"td"),l._uU(202,"null"),l.qZA(),l.TgZ(203,"td"),l._uU(204,"Style class of the label."),l.qZA(),l.qZA(),l.TgZ(205,"tr"),l.TgZ(206,"td"),l._uU(207,"checkboxIcon"),l.qZA(),l.TgZ(208,"td"),l._uU(209,"string"),l.qZA(),l.TgZ(210,"td"),l._uU(211,"pi pi-check"),l.qZA(),l.TgZ(212,"td"),l._uU(213,"Icon class of the checkbox icon."),l.qZA(),l.qZA(),l.TgZ(214,"tr"),l.TgZ(215,"td"),l._uU(216,"readonly"),l.qZA(),l.TgZ(217,"td"),l._uU(218,"boolean"),l.qZA(),l.TgZ(219,"td"),l._uU(220,"false"),l.qZA(),l.TgZ(221,"td"),l._uU(222,"When present, it specifies that the component cannot be edited."),l.qZA(),l.qZA(),l.TgZ(223,"tr"),l.TgZ(224,"td"),l._uU(225,"required"),l.qZA(),l.TgZ(226,"td"),l._uU(227,"boolean"),l.qZA(),l.TgZ(228,"td"),l._uU(229,"false"),l.qZA(),l.TgZ(230,"td"),l._uU(231,"When present, it specifies that checkbox must be checked before submitting the form."),l.qZA(),l.qZA(),l.TgZ(232,"tr"),l.TgZ(233,"td"),l._uU(234,"trueValue"),l.qZA(),l.TgZ(235,"td"),l._uU(236,"any"),l.qZA(),l.TgZ(237,"td"),l._uU(238,"null"),l.qZA(),l.TgZ(239,"td"),l._uU(240,"Value in checked state."),l.qZA(),l.qZA(),l.TgZ(241,"tr"),l.TgZ(242,"td"),l._uU(243,"falseValue"),l.qZA(),l.TgZ(244,"td"),l._uU(245,"any"),l.qZA(),l.TgZ(246,"td"),l._uU(247,"null"),l.qZA(),l.TgZ(248,"td"),l._uU(249,"Value in unchecked state."),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.TgZ(250,"h5"),l._uU(251,"Events"),l.qZA(),l.TgZ(252,"div",22),l.TgZ(253,"table",23),l.TgZ(254,"thead"),l.TgZ(255,"tr"),l.TgZ(256,"th"),l._uU(257,"Name"),l.qZA(),l.TgZ(258,"th"),l._uU(259,"Parameters"),l.qZA(),l.TgZ(260,"th"),l._uU(261,"Description"),l.qZA(),l.qZA(),l.qZA(),l.TgZ(262,"tbody"),l.TgZ(263,"tr"),l.TgZ(264,"td"),l._uU(265,"onChange"),l.qZA(),l.TgZ(266,"td"),l._uU(267," checked: Boolean value to represent new state of checkbox. originalEvent: Browser event "),l.qZA(),l.TgZ(268,"td"),l._uU(269,"Callback to invoke on checkbox click."),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.TgZ(270,"h5"),l._uU(271,"Methods"),l.qZA(),l.TgZ(272,"div",22),l.TgZ(273,"table",23),l.TgZ(274,"thead"),l.TgZ(275,"tr"),l.TgZ(276,"th"),l._uU(277,"Name"),l.qZA(),l.TgZ(278,"th"),l._uU(279,"Parameters"),l.qZA(),l.TgZ(280,"th"),l._uU(281,"Description"),l.qZA(),l.qZA(),l.qZA(),l.TgZ(282,"tbody"),l.TgZ(283,"tr"),l.TgZ(284,"td"),l._uU(285,"focus"),l.qZA(),l.TgZ(286,"td"),l._uU(287,"-"),l.qZA(),l.TgZ(288,"td"),l._uU(289,"Applies focus."),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.TgZ(290,"h5"),l._uU(291,"Styling"),l.qZA(),l.TgZ(292,"p"),l._uU(293,"Following is the list of structural style classes, for theming classes visit "),l.TgZ(294,"a",24),l._uU(295,"theming page"),l.qZA(),l._uU(296,"."),l.qZA(),l.TgZ(297,"div",22),l.TgZ(298,"table",23),l.TgZ(299,"thead"),l.TgZ(300,"tr"),l.TgZ(301,"th"),l._uU(302,"Name"),l.qZA(),l.TgZ(303,"th"),l._uU(304,"Element"),l.qZA(),l.qZA(),l.qZA(),l.TgZ(305,"tbody"),l.TgZ(306,"tr"),l.TgZ(307,"td"),l._uU(308,"p-chkbox"),l.qZA(),l.TgZ(309,"td"),l._uU(310,"Container element"),l.qZA(),l.qZA(),l.TgZ(311,"tr"),l.TgZ(312,"td"),l._uU(313,"p-chkbox-box"),l.qZA(),l.TgZ(314,"td"),l._uU(315,"Container of icon."),l.qZA(),l.qZA(),l.TgZ(316,"tr"),l.TgZ(317,"td"),l._uU(318,"p-chkbox-icon"),l.qZA(),l.TgZ(319,"td"),l._uU(320,"Icon element."),l.qZA(),l.qZA(),l.TgZ(321,"tr"),l.TgZ(322,"td"),l._uU(323,"p-chkbox-label"),l.qZA(),l.TgZ(324,"td"),l._uU(325,"Label element."),l.qZA(),l.qZA(),l.TgZ(326,"tr"),l.TgZ(327,"td"),l._uU(328,"p-label-active"),l.qZA(),l.TgZ(329,"td"),l._uU(330,"Label element of a checked state."),l.qZA(),l.qZA(),l.TgZ(331,"tr"),l.TgZ(332,"td"),l._uU(333,"p-label-focus"),l.qZA(),l.TgZ(334,"td"),l._uU(335,"Label element of a focused state."),l.qZA(),l.qZA(),l.TgZ(336,"tr"),l.TgZ(337,"td"),l._uU(338,"p-label-disabled"),l.qZA(),l.TgZ(339,"td"),l._uU(340,"Label element of a disabled state."),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.TgZ(341,"h5"),l._uU(342,"Dependencies"),l.qZA(),l.TgZ(343,"p"),l._uU(344,"None."),l.qZA(),l.qZA(),l.TgZ(345,"p-tabPanel",25),l.TgZ(346,"a",26),l.TgZ(347,"span"),l._uU(348,"View on GitHub"),l.qZA(),l.qZA(),l.TgZ(349,"a",27),l.TgZ(350,"span"),l._uU(351,"Edit in StackBlitz"),l.qZA(),l.qZA(),l.TgZ(352,"app-code",20),l.IAx(),l._uU(353,'\n<h5>Basic</h5>\n<div class="p-field-checkbox">\n    <p-checkbox [(ngModel)]="checked" binary="true" inputId="binary"></p-checkbox>\n    <label for="binary">{{checked}}</label>\n</div>\n<h5>Multiple</h5>\n<div class="p-field-checkbox">\n    <p-checkbox name="group1" value="New York" [(ngModel)]="selectedCities" inputId="ny"></p-checkbox>\n    <label for="ny">New York</label>\n</div>\n<div class="p-field-checkbox">\n    <p-checkbox name="group1" value="San Francisco" [(ngModel)]="selectedCities" inputId="sf"></p-checkbox>\n    <label for="sf">San Francisco</label>\n</div>\n<div class="p-field-checkbox">\n    <p-checkbox name="group1" value="Los Angeles" [(ngModel)]="selectedCities" inputId="la"></p-checkbox>\n    <label for="la">Los Angeles</label>\n</div>\n<div class="p-field-checkbox">\n    <p-checkbox name="group1" value="Chicago" [(ngModel)]="selectedCities" inputId="ch"></p-checkbox>\n    <label for="ch">Chicago</label>\n</div>\n\n<h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n<div *ngFor="let category of categories" class="p-field-checkbox">\n    <p-checkbox name="group2" value="category" [value]="category"  [(ngModel)]="selectedCategories" [inputId]="category.key" [disabled]="category.key === \'R\'"></p-checkbox>\n    <label [for]="category.key">{{category.name}}</label>\n</div>\n'),l.fQ9(),l.qZA(),l.TgZ(354,"app-code",19),l.IAx(),l._uU(355,"\nexport class CheckboxDemo {\n\n    selectedCities: string[] = [];\n\n    selectedCategories: any[] = ['Technology', 'Sports'];\n\n    categories: any[] = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\n\n    checked: boolean = false;\n\n    ngOnInit() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n"),l.fQ9(),l.qZA(),l.qZA(),l.TgZ(356,"p-tabPanel",28),l.YNc(357,r,1,0,"ng-template",29),l.qZA(),l.qZA(),l.qZA()),2&e&&(l.xp6(12),l.Q6J("ngModel",t.checked),l.xp6(2),l.Oqu(t.checked),l.xp6(4),l.Q6J("ngModel",t.selectedCities),l.xp6(4),l.Q6J("ngModel",t.selectedCities),l.xp6(4),l.Q6J("ngModel",t.selectedCities),l.xp6(4),l.Q6J("ngModel",t.selectedCities),l.xp6(5),l.Q6J("ngForOf",t.categories),l.xp6(259),l.Q6J("routerLink",l.DdM(8,A)))},directives:[c.P,g.XZ,a.JJ,a.On,o.sg,i.xf,i.x4,u.h,Z.yS,d.jx],encapsulation:2}),e})(),p=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=l.oAB({type:e}),e.\u0275inj=l.cJS({imports:[[Z.Bz.forChild([{path:"",component:h}])],Z.Bz]}),e})();var T=n(18897),q=n(59202);let b=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=l.oAB({type:e}),e.\u0275inj=l.cJS({imports:[[o.ez,a.u5,p,T.nD,c.L,q.LU,u.a]]}),e})()}}]);